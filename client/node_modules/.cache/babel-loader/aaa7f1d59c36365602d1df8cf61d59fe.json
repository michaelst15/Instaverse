{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mern-Stack-Project\\\\client\\\\src\\\\components\\\\AuthForm\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Input, Button, Card, Layout, Typography } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from 'react-redux';\nimport { login, signup } from '../../actions/authentication';\nimport styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nfunction AuthForm() {\n  _s();\n\n  const user = null;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const onSubmit = formValues => {\n    if (isLogin) {\n      dispatch(login(formValues, navigate));\n    } else {\n      dispatch(signup(formValues, navigate));\n    }\n  };\n\n  const switchMode = () => {\n    setIsLogin(prevIsLogin => !prevIsLogin);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: styles.card,\n      title: /*#__PURE__*/_jsxDEV(Title, {\n        level: 4,\n        style: {\n          textAlign: \"center\"\n        },\n        children: [isLogin ? \"Login to\" : \"Join\", \" Instaverse\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"authform\",\n        form: form,\n        size: \"large\",\n        wrapperCol: {\n          span: 20,\n          offset: 2\n        },\n        onFinish: onSubmit,\n        children: [isLogin || /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: \"Please enter your username\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 48\n              }, this),\n              placeholder: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          rules: [{\n            required: true,\n            message: \"Please enter valid email address\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            prefix: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 53\n            }, this),\n            placeholder: \"email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: \"Please enter your password\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            type: \"password\",\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 65\n            }, this),\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), isLogin || /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"confirmPassword\",\n          rules: [{\n            required: true,\n            message: \"Please repeat your password\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            type: \"password\",\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 69\n            }, this),\n            placeholder: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"submit\",\n            typeof: \"primary\",\n            children: isLogin ? \"Log In\" : \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              margin: \"0 10px 0px 20px\"\n            },\n            children: \"Or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: switchMode,\n            children: isLogin ? \"Register now\" : \"have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthForm, \"7ku0rj8pDBXF4VDpOFhWfFyNNfo=\", false, function () {\n  return [useNavigate, useDispatch, Form.useForm];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["E:/Mern-Stack-Project/client/src/components/AuthForm/AuthForm.js"],"names":["React","useState","useNavigate","Form","Input","Button","Card","Layout","Typography","UserOutlined","LockOutlined","MailOutlined","useDispatch","login","signup","styles","Title","AuthForm","user","navigate","dispatch","form","useForm","isLogin","setIsLogin","onSubmit","formValues","switchMode","prevIsLogin","container","card","textAlign","span","offset","required","message","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, Input, Button, Card, Layout, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { login, signup } from '../../actions/authentication';\r\n\r\nimport styles from './styles';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction AuthForm() {\r\n    const user = null;\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const [form] = Form.useForm();\r\n    const [isLogin, setIsLogin] = useState(true);\r\n\r\n    const onSubmit = (formValues) => {\r\n        if (isLogin) {\r\n            dispatch(login(formValues, navigate));\r\n        } else {\r\n            dispatch(signup(formValues, navigate));\r\n        }\r\n    };\r\n\r\n    const switchMode = () => {\r\n        setIsLogin(prevIsLogin => !prevIsLogin);\r\n    };\r\n\r\n    return (\r\n        <Layout style={styles.container}>\r\n            <Card\r\n                style={styles.card}\r\n                title={\r\n                    <Title level={4} style={{ textAlign: \"center\" }}>\r\n                        { isLogin ? \"Login to\" : \"Join\" } Instaverse\r\n                    </Title>\r\n                }\r\n            >\r\n                <Form\r\n                    name=\"authform\"\r\n                    form={form}\r\n                    size=\"large\"\r\n                    wrapperCol={{ span: 20, offset: 2 }}\r\n                    onFinish={onSubmit}\r\n                >\r\n                    {isLogin || (\r\n                        <>\r\n                            <Form.Item\r\n                                name=\"username\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please enter your username\"\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input prefix={<UserOutlined />} placeholder=\"username\" />\r\n                            </Form.Item>\r\n                        </>\r\n                    )}\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please enter valid email address\"\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input type=\"email\" prefix={<MailOutlined />} placeholder=\"email address\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please enter your password\"\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"password\" />\r\n                    </Form.Item>\r\n                    {isLogin || (\r\n                        <Form.Item\r\n                            name=\"confirmPassword\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please repeat your password\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"Confirm Password\" />\r\n                        </Form.Item>\r\n                    )}\r\n                    <Form.Item>\r\n                        <Button htmlType='submit' typeof='primary'>\r\n                            {isLogin ? \"Log In\" : \"Join\" }\r\n                        </Button>\r\n                        <span style={{ margin: \"0 10px 0px 20px\" }}>Or</span>\r\n                        <Button type='link' onClick={switchMode}>\r\n                            {isLogin ? \"Register now\" : \"have an account?\"}\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AuthForm"]},"metadata":{},"sourceType":"module"}