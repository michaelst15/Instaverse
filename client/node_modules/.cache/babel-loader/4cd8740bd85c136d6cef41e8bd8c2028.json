{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mern-Stack-Project\\\\client\\\\src\\\\components\\\\StoryForm\\\\StoryForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, Form, Input, Typography, Button } from \"antd\";\nimport FileBase64 from \"react-file-base64\";\nimport styles from './styles';\nimport { createStory, updateStory } from '../../actions/stories';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nfunction StoryForm(_ref) {\n  _s();\n\n  var _user$result;\n\n  let {\n    selectedId,\n    setSelectedId\n  } = _ref;\n  const story = useSelector(state => selectedId ? state.stories.find(story => story._id === selectedId) : null);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const username = user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.username;\n\n  const onSubmit = formValues => {\n    selectedId ? dispatch(updateStory(selectedId, { ...formValues,\n      username\n    })) : dispatch(createStory({ ...formValues,\n      username\n    }));\n    reset();\n  };\n\n  useEffect(() => {\n    if (story) {\n      form.setFieldsValue(story);\n    }\n  }, [story, form]);\n\n  const reset = () => {\n    form.resetFields();\n    setSelectedId(null);\n  };\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: styles.formCard,\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        level: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.formTitle,\n          children: \"Welcome to Instaverse!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this), \"Please \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/authform\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, this), \" or\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/authform\",\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), \"  for sharing instant moments or ideas.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: styles.formCard,\n    title: /*#__PURE__*/_jsxDEV(Title, {\n      level: 4,\n      style: styles.formTitle,\n      children: [selectedId ? \"Editing\" : \"Share\", \" a story\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 16\n      },\n      layout: \"horizontal\",\n      size: \"middle\",\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"caption\",\n        label: \"Caption\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          allowClear: true,\n          autoSize: {\n            minRows: 2,\n            maxRows: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"tags\",\n        label: \"Tags\",\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          allowClear: true,\n          autoSize: {\n            minRows: 2,\n            maxRows: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"image\",\n        label: \"Image\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(FileBase64, {\n          type: \"file\",\n          multiple: false,\n          onDone: e => {\n            form.setFieldsValue({\n              image: e.base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          span: 16,\n          offset: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          block: true,\n          htmlType: \"submit\",\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), !selectedId ? null : /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          span: 16,\n          offset: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          block: true,\n          htmlType: \"button\",\n          danger: true,\n          onClick: reset,\n          children: \"Discard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StoryForm, \"NG9IJt/jpoWrTvz0Yqf0H/UVFPA=\", false, function () {\n  return [useSelector, useDispatch, Form.useForm];\n});\n\n_c = StoryForm;\nexport default StoryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoryForm\");","map":{"version":3,"sources":["E:/Mern-Stack-Project/client/src/components/StoryForm/StoryForm.js"],"names":["React","useEffect","useDispatch","useSelector","Card","Form","Input","Typography","Button","FileBase64","styles","createStory","updateStory","Link","Title","StoryForm","selectedId","setSelectedId","story","state","stories","find","_id","dispatch","form","useForm","user","JSON","parse","localStorage","getItem","username","result","onSubmit","formValues","reset","setFieldsValue","resetFields","formCard","formTitle","span","required","minRows","maxRows","e","image","base64","offset"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Card, Form, Input, Typography, Button } from \"antd\";\r\nimport FileBase64 from \"react-file-base64\";\r\nimport styles from './styles';\r\nimport { createStory, updateStory } from '../../actions/stories';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction StoryForm({ selectedId, setSelectedId }) {\r\n\r\n  const story = useSelector((state) => selectedId ? state.stories.find(story => story._id === selectedId) : null);\r\n\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  const username = user?.result?.username;\r\n\r\n  const onSubmit = (formValues) => {\r\n    selectedId ?\r\n    dispatch(updateStory(selectedId, { ...formValues, username }))\r\n    : dispatch(createStory({ ...formValues, username }));\r\n\r\n    reset();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(story) {\r\n      form.setFieldsValue(story);\r\n    }\r\n  }, [story, form]);\r\n\r\n  const reset = () => {\r\n    form.resetFields();\r\n    setSelectedId(null);\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <Card style={styles.formCard}>\r\n        <Title level={4}>\r\n          <span style={styles.formTitle}>\r\n            Welcome to Instaverse!\r\n          </span> <br />\r\n          Please <Link to=\"/authform\">login</Link> or{\" \"}\r\n          <Link to=\"/authform\">register</Link>  for sharing instant moments or ideas.\r\n        </Title>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      style={styles.formCard}\r\n      title={\r\n        <Title level={4} style={styles.formTitle}>\r\n          {selectedId ? \"Editing\" : \"Share\" } a story\r\n        </Title>\r\n      }\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 16 }}\r\n        layout=\"horizontal\"\r\n        size=\"middle\"\r\n        onFinish={onSubmit}\r\n      >\r\n        <Form.Item name=\"caption\" label=\"Caption\" rules={[{ required: true }]} >\r\n          <Input.TextArea allowClear autoSize={{ minRows: 2, maxRows: 6 }} />\r\n        </Form.Item>\r\n        <Form.Item name=\"tags\" label=\"Tags\" >\r\n          <Input.TextArea allowClear autoSize={{ minRows: 2, maxRows: 6 }}  />\r\n        </Form.Item>\r\n        <Form.Item name=\"image\" label=\"Image\" rules={[{ required: true }]}>\r\n          <FileBase64\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={(e) => {\r\n              form.setFieldsValue({\r\n                image: e.base64\r\n              })\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            span: 16,\r\n            offset: 6\r\n          }}\r\n        >\r\n         <Button\r\n          type=\"primary\"\r\n          block\r\n          htmlType='submit'\r\n         >\r\n           Share\r\n         </Button>\r\n        </Form.Item>\r\n        {!selectedId ? null :\r\n          <Form.Item\r\n            wrapperCol={{\r\n              span: 16,\r\n              offset: 6\r\n            }}\r\n          >\r\n          <Button\r\n            type=\"primary\"\r\n            block\r\n            htmlType='button'\r\n            danger\r\n            onClick={reset}\r\n          >\r\n            Discard\r\n          </Button>\r\n          </Form.Item>\r\n        }\r\n      </Form>\r\n\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StoryForm"]},"metadata":{},"sourceType":"module"}